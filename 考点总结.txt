*Binary Tree
1. Inorder Traversal/Level Order Traversal/Postorder Traversal/Vertical Order Traversal
%Recursive & Iterative
%BFS/DFS
%Get Leaf Nodes
>Lintcode 67[Easy]
>Lintcode 68[Easy]
>Lintcode 69[Easy]
>Lintcode 878[Medium]
2. Root needs info from subtree
>Lintcode 596[Easy]


*Binary Search Tree (BST)
0. Definition
Binary search tree (BST) is a special form of a binary tree with the binary search properties:
a. The value in each node must be greater than (or equal to) any values stored in its left subtree.
b. The value in each node must be less than (or equal to) any values stored in its right subtree.
a.b. -> c. Inorder traversal of a binary search tree is sorted.
审题时注意看清是否允许相等
1. Search
>Lintcode 1524[Easy]
2. Validation
>Leetcode 98[Medium], Lintcode 95[Medium]

Data Structures
* Linked List
>Swap Nodes in Pairs: Lintcode 451[Easy]/Leetcode 24[Medium]

Advanced Data Structures

*Segment Tree

*Trie (Prefix Tree)
Implementation
>Lintcode 442[Medium] 
Serialization/Deserialization
>Lintcode 527[Hard] 

*Bit Operation
>Power of Two: Lintcode 1314[Easy]/Leetcode 231[Easy]

*Permutation
>Next Permutation: Lintcode 52[Medium]/Leetcode 31[Medium]
